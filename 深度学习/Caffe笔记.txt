
▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂	
				Linux Caffe环境搭建
▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂	
【一】安装Ubuntu18.4双系统	// ubuntu UELF安装
	bios设置
		传统模式 禁用
		安全启动模式 禁用	
	UltraISO制作ubuntu18.04镜像	
	从固态硬盘压缩出1G(用做ubuntu系统boot分区), 机械硬盘压出200g
	开机从u盘启动
	选择"try install"
	选择"其它选项"
	分区
		1.先删除 非"..windows Boot Manager"的EFI分区
		2.双击我们压缩卷得到的"空闲"
			EFL  1G	 				 主分区			//  固态
			swap 和内存卡一样大(16G) 逻辑分区		// 机械
			/ 	 剩下的空间			 主分区			// 机械
		3."引导的设备"选择"..windows Boot Manager"
	等待安装完成
	2.解决启动卡死:
		显卡驱动不匹配
		解决办法:
			https://www.cnblogs.com/masbay/p/10718514.html
			1.选择ubuntu高级选项，回车
			2.选择恢复（recovery）模式
			3.选择resume,回车进入系统。
			sudo gedit /etc/default/grub
			将其中的quiet splash修改为quiet splash acpi_osi=linux并保存;
			sudo update-grub
		
	3.系统引导
		1.bios里面,在"操作系统的启动管理员"上按下enter,将ubuntu移到第一个,按F10保存
		2.将倒计时设置为3秒
			sudo gedit /etc/default/grub
			修改为GRUB_TIMEOUT=3
			sudo update-grub
	
【二】安装NVIDIA显卡驱动	
	1.删除原来的显卡驱动
		sudo apt-get purge nvidia*
		sudo vi /etc/modprobe.d/blacklist.conf
		添加
			blacklist nouveau
		sudo update-initramfs -u
	2.重启安装驱动
		运行 ubuntu-drivers devices命令	// 使用PPA仓库进行自动化安装
			// 找到推荐的型号
		在ubuntu图形界面,点击软件和更新， 附加， 选择推荐的型号驱动(我的是nvidia430,安装其他型号有问题)
	3.验证
		1.安装完成之后输入以下指令进行验证：sudo nvidia-smi，若列出了 GPU 的信息列表则表示驱动安装成功
		2.如果进程显卡在运行显卡,就点击NVIDIA图标在PRIME中选择INVIDIA显卡
		3.点击设置,abort,看显卡是否在启用
		
【三】安装CUDA
	下载
		cuda_10.0.130_410.48_linux.run	// 必须在官网上找能匹配NVIDIA显卡型号的安装包
	2.安装依赖:
		sudo apt-get install libprotobuf-dev libleveldb-dev libsnappy-dev libopencv-dev libhdf5-serial-dev protobuf-compiler
		sudo apt-get install --no-install-recommends libboost-all-dev
		sudo apt-get install libopenblas-dev liblapack-dev libatlas-base-dev
		sudo apt-get install libgflags-dev libgoogle-glog-dev liblmdb-dev
		sudo apt-get install git cmake build-essential	
	3.安装
		1.sudo sh cuda_10.0.130_410.48_linux.run
		2.除了不选择安装Nvidia显卡驱动之外,其余全部yes和默认
	4.添加环境变量
		export LD_LIBRARY_PATH=/usr/lib/x86_64-linux-gnu:$LD_LIBRARY_PATH
		export LD_LIBRARY_PATH=/lib/x86_64-linux-gnu:$LD_LIBRARY_PATH
		export PATH=/usr/local/cuda-10.0/bin:$PATH
		export LD_LIBRARY_PATH=/usr/local/cuda/lib64:$LD_LIBRARY_PATH
【四】安装 opencv3.1 
	apt-get install就ok
【五】cuDNN安装
	1.下载
		https://developer.nvidia.com/rdp/cudnn-download // 必须下载与CUDA对应的版本
		下载对应于CUDA的Linux(cnDNN)版本
	2.安装cuDNN	
		mv cudnn-10.0-linux-x64-v7.6.3.30.solitairetheme8 cudnn-10.0-linux-x64-v7.6.3.30.tgz
		tar -zxvf cudnn-8.0-linux-x64-v7.tgz
		得到cuda文件夹
		cd cuda 
		cp include/* /usr/local/cuda-10.0/include
		cp lib64/* /usr/local/cuda-10.0/lib64
【六】安装caffe
	参考Doc/<Caffe 安装教程>		
		
	 
		


	
▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂	
				Caffe介绍
▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂	
【一】基础
	①介绍
		1.Caffe使用C++代码写的
		2.Caffe提供了Python和MATLAB的调用接口
		3.训练起来很方便
	②Caffe的模块
		Blob	用于处理输入数据Data和标签Lable
		Layer	卷积层,池化层,激活函数层都是一个Layer
		Net		所有层的组合,就形成了一个网络
		Solver	用来进行梯度更新
	③训练
		1.不需要写代码就可以训练好一个卷积神经网络网络
		2.我们需要做的事
			1.转换数据,数据预处理(运行一个脚本)
			2.定义一个Net(网络流程配置文件)				// prototxt文件
			3.定义一个solver(配置训练所需的超参数文件)  // prototxt文件
			4.训练
【二】Caffe训练的整体模型
	第一步: 数据转换
		1.比如做分类的化,要将数据转换为LMDB的格式	// LMDB格式的数据的特点是读取速度快
		2.转换的文本文件的格式
			"[path/to/image.jpeg][Label]"
		3.DHF5文件
	第二步: 定义网络(定义网络中的所有层)
	第三步: 定义Solver
	第四步: 调用训练脚本
		比如: ./build/tools/caffe train \
				-gpu 0 \
				-model path/to/trainval/prototxt \
				-solver path/to/solver/prototxt \
				-weights path/to/pretrained_weights.caffemodel
【三】社区中训练好的现成的模型
	Caffe：Model Zoo	// github社区
	训练好的金典模型比如: AlexNet, VGG, GoogLeNet, ResNet, plus others

▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂	
				Caffe使用实例
▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂	
官网Examples, 如何训练一个网络				
NotebookExamples, 如何应用一个训练好的网络
				
				
				
		
		
		
		
	
